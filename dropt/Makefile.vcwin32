# dropt Makefile for Microsoft nmake
#
# Written by James D. Lin and assigned to the public domain.

.SILENT:

CC = cl.exe
LINK = link.exe
LINKLIB = lib.exe

DEBUG_SUFFIX =
NO_STRING_SUFFIX =
UNICODE_SUFFIX =

!IFNDEF CFLAGS
CFLAGS =
!ENDIF

CFLAGS = /EHsc /nologo /GF /Gy /GS /W3 /DSTRICT /DWIN32_LEAN_AND_MEAN $(CFLAGS)
LINK_FLAGS = /NOLOGO /NXCOMPAT
LINKLIB_FLAGS = /NOLOGO

!IF "$(DYNAMIC_CRT)" != ""
CC_CRT_FLAG = /MD
!ELSE
CC_CRT_FLAG = /MT
!ENDIF

!IF "$(DEBUG)" != ""
DEBUG_SUFFIX = -debug
CFLAGS = $(CFLAGS) /Od /DDEBUG /RTC1 /Zi $(CC_CRT_FLAG)d /DDROPT_DEBUG_STRING_BUFFERS
LINK_FLAGS = $(LINK_FLAGS) /DEBUG
!ELSE
CFLAGS = $(CFLAGS) /Ox /DNDEBUG $(CC_CRT_FLAG)
LINK_FLAGS = $(LINK_FLAGS) /RELEASE /OPT:REF
!ENDIF

!IF "$(DROPT_NO_STRING_BUFFERS)" != ""
NO_STRING_SUFFIX = -nostring
CFLAGS = $(CFLAGS) /DDROPT_NO_STRING_BUFFERS
!ENDIF

!IF "$(_UNICODE)" != ""
UNICODE_SUFFIX = -w
CFLAGS = $(CFLAGS) /D_UNICODE
!ENDIF

!IFNDEF SRC_ROOT
SRC_ROOT = $(MAKEDIR)
!ENDIF

!IFNDEF BUILD_ROOT
BUILD_ROOT = $(SRC_ROOT)\build
!ENDIF

OUTDIR = $(BUILD_ROOT)\lib$(DEBUG_SUFFIX)$(NO_STRING_SUFFIX)$(UNICODE_SUFFIX)
OBJDIR = $(BUILD_ROOT)\obj$(DEBUG_SUFFIX)$(NO_STRING_SUFFIX)$(UNICODE_SUFFIX)

GLOBAL_DEP = "$(SRC_ROOT)\dropt.h" "$(SRC_ROOT)\dropt_string.h" "$(OBJDIR)" "$(OUTDIR)"
LIB_OBJ_FILES = "$(OBJDIR)\dropt.obj" "$(OBJDIR)\dropt_handlers.obj" "$(OBJDIR)\dropt_string.obj"
OBJ_FILES = $(LIB_OBJ_FILES) "$(OBJDIR)\dropt_example.obj" "$(OBJDIR)\test_dropt.obj"

DROPT_LIB = "$(OUTDIR)\dropt.lib"
DROPTXX_LIB = "$(OUTDIR)\droptxx.lib"
EXAMPLE_EXE = "$(OBJDIR)\dropt_example.exe"
TEST_EXE = "$(OBJDIR)\test_dropt.exe"


# Targets --------------------------------------------------------------

default: lib libxx

all: default example test

lib: $(DROPT_LIB)
libxx: $(DROPTXX_LIB)

!IF "$(DROPT_NO_STRING_BUFFERS)" != ""
example:
    @echo.(Skipping dropt_example because of DROPT_NO_STRING_BUFFERS.)
!ELSE
example: $(EXAMPLE_EXE)
!ENDIF

test: $(TEST_EXE)
    @echo.Running tests...
    $**
    @echo.Tests passed.

$(DROPT_LIB): $(LIB_OBJ_FILES)
    $(LINKLIB) /OUT:$@ $(LINKLIB_FLAGS) $**

$(DROPTXX_LIB): $(DROPT_LIB) "$(OBJDIR)\droptxx.obj"
    $(LINKLIB) /OUT:$@ $(LINKLIB_FLAGS) $**

$(EXAMPLE_EXE) $(TEST_EXE): "$(OBJDIR)\$(@B:"=).obj" $(DROPT_LIB)
    $(LINK) /SUBSYSTEM:CONSOLE /OUT:$@ $(LINK_FLAGS) $**

$(OBJ_FILES): $(GLOBAL_DEP) "$(SRC_ROOT)\$(@B:"=).c"
    $(CC) /c /Fo"$(OBJDIR)\\" /Fd"$(OBJDIR)\\" $(CFLAGS) "$(SRC_ROOT)\$(@B:"=).c"

"$(OBJDIR)\droptxx.obj": $(GLOBAL_DEP) "$(SRC_ROOT)\$(@B:"=).hpp" "$(SRC_ROOT)\$(@B:"=).cpp"
    $(CC) /c /Fo"$(OBJDIR)\\" /Fd"$(OBJDIR)\\" $(CFLAGS) "$(SRC_ROOT)\$(@B:"=).cpp"


# Directories ----------------------------------------------------------

# Create directories as necessary.
"$(OUTDIR)":
    if not exist "$(OUTDIR)\$(NULL)" md $@
"$(OBJDIR)":
    if not exist "$(OBJDIR)\$(NULL)" md $@


clean:
    -if exist "$(BUILD_ROOT)\$(NULL)" rd /s /q "$(BUILD_ROOT)"
